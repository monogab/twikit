const express = require('express');
const fs = require('fs');
const formidable = require('formidable');
const csv = require('csv-parser');

const app = express();
const port = 3000;


app.use(function(req, res, next) {
    res.header("Access-Control-Allow-Origin", "*");
    res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
    next();
});


app.post('/api/csv2json', (req, res) => {

    return uploadFile(req)
         .then((filename) => parseCsv(filename))
         .then((csvlines) => reshape(csvlines))
         .then((json) => JSON.stringify(json))
         .then((str) => {
             res.setHeader('Content-Type', 'application/json');
             res.write(str);
             res.end();
         });

});


function uploadFile(req){
    return new Promise( (resolve, reject) => {
        const form = new formidable.IncomingForm();
        form.parse(req, function (err, fields, files) {
            if (err) return reject(err);
            resolve(files.file.path)
        })
    })
}

function parseCsv(filename){
    return new Promise( (resolve, reject) => {
        const csvlines = [];
        fs.createReadStream(filename)
            .pipe(csv())
            .on('data', (jsonRow) => csvlines.push(jsonRow))
            .on('end', () => {
                resolve(csvlines)
            })
    })
}

//
// Reshape the json generated by csv-parser
// original [ {A:'a', B:'b',C:'c'} , {A:'x', B:'y', C:'z'}...] 
// reshaped  {header : ['A','B','C'...], lines: [['a','b','c'],['x','y','z']...] }
//
function reshape(csvlines){
    if (csvlines.length > 0) {
        return {
            table : {
                header : Object.keys(csvlines[0]),
                lines :  csvlines.map((line) => Object.values(line))
            }
        };
        
      } else {
          return { table : null };
    }
}

app.listen(port, () => console.log(`Conversion csv->json server on  ${port}!`));



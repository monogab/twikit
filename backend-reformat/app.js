const express = require('express');
const fs = require('fs');
const formidable = require('formidable');
const csv = require('csv-parser');

const app = express();
const port = 3000;


app.use(function(req, res, next) {
    res.header("Access-Control-Allow-Origin", "*");
    res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
    next();
});


app.post('/api/csv2json', (req, res) => {


  return new Promise( (resolve, reject) => {
            const form = new formidable.IncomingForm();
            form.parse(req, function (err, fields, files) {
                if (err) return reject(err);
                resolve(files.file.path)
            })
         })
         .then((filename) => {
            console.log('filename',filename);
            return  new Promise( (resolve, reject) => {
                const results = [];
                fs.createReadStream(filename)
                    .pipe(csv())
                    .on('data', (jsonRow) => results.push(jsonRow))
                    .on('end', () => {
                        resolve(results)
                    })
            })
         })
         .then((results) => reshapeJson(results))
         .then((json) => JSON.stringify(json))
         .then((strJson) => {
             console.log('results',strJson);
             res.setHeader('Content-Type', 'application/json');
             res.write(strJson);
             res.end();
         });





});

//
// Reshape the json generated by csv-parser
// original [ {A:'a', B:'b',C:'c'} , {A:'x', B:'y', C:'z'}...] 
// reshaped  {header : ['A','B','C'...], lines: [['a','b','c'],['x','y','z']...] }
//
function reshapeJson(json){
    if (json.length > 0) {
        const lines = [];
        const header = Object.keys(json[0]);

        json.forEach(function (row) {
          lines.push(Object.values(row));
        });
        tablejson = { table : {header:header, lines: lines} };
        
      } else {
          tablejson = { table : null };
      }
    return  tablejson;   
}

app.listen(port, () => console.log(`Conversion csv->json server on  ${port}!`))


